{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","NweetTextRef","doc","id","onDeleteClick","window","confirm","deleteDoc","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","useRef","fileRef","uid","v4","uploadString","response","getDownloadURL","createdAt","Date","now","creatorId","addDoc","collection","docRef","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","q","query","orderBy","unsubscribe","onSnapshot","querySnapshot","newArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","currentUser","getMyNweets","where","getDocs","forEach","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","firebase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b08e26d0.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport * as firebase from \"firebase/app\";\r\nimport {getAuth} from \"firebase/auth\";\r\nimport \"firebase/auth\";\r\nimport {getFirestore} from \"firebase/firestore\";\r\nimport {getStorage} from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBBlXmk08P69xPaSmE7AKRpec2z82mWsOc\",\r\n  authDomain: \"nwitter-ef72a.firebaseapp.com\",\r\n  projectId: \"nwitter-ef72a\",\r\n  storageBucket: \"nwitter-ef72a.appspot.com\",\r\n  messagingSenderId: \"91714356572\",\r\n  appId: \"1:91714356572:web:4ff6b4e70fe03407f0ed99\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport default app;\r\nexport const authService=getAuth();\r\nexport const firebaseInstance=firebase;\r\nexport const dbService=getFirestore();\r\nexport const storageService=getStorage();","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const { target: { name, value } } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await createUserWithEmailAndPassword(authService, email, password);\r\n            } else {\r\n                data = await signInWithEmailAndPassword(authService, email, password);\r\n            }\r\n            console.log(data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    return (<>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n            <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\"/>\r\n            <input name=\"password\" type=\"password\" placeholder=\"password\" required value={password} onChange={onChange} className=\"authInput\"/>\r\n            <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} className=\"authInput authSubmit\"/>\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign in\" : \"Create Account\"}</span>\r\n    </>);\r\n};\r\n\r\nexport default AuthForm;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService } from \"fbase\";\r\nimport {\r\n    GithubAuthProvider,\r\n    GoogleAuthProvider,\r\n    signInWithPopup,\r\n} from \"firebase/auth\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const { target: { name }, } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new GithubAuthProvider();\r\n        }\r\n        const data = await signInWithPopup(authService, provider);\r\n        console.log(data);\r\n    };\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Auth;","import { doc,\r\n    deleteDoc,\r\n    updateDoc,\r\n} from \"@firebase/firestore\";\r\nimport {\r\n    deleteObject,\r\n    ref,\r\n} from \"firebase/storage\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing]=useState(false);\r\n    const [newNweet, setNewNweet]=useState(nweetObj.text);\r\n    const NweetTextRef=doc(dbService, \"nweets\", `${nweetObj.id}`);\r\n    const onDeleteClick = async () =>{\r\n        const ok=window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if(ok){\r\n            await deleteDoc(NweetTextRef);\r\n            if(nweetObj.attachmentUrl!==\"\"){\r\n                await deleteObject(ref(storageService, nweetObj.attachmentUrl));\r\n            }\r\n        }\r\n    };\r\n    const toggleEditing=()=>setEditing(prev=>!prev);\r\n    const onSubmit=async (event)=>{\r\n        event.preventDefault();\r\n        await updateDoc(NweetTextRef, {\r\n            text: newNweet,\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange=(event)=>{\r\n        const {target:{value}}=event;\r\n        setNewNweet(value);\r\n    };\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing?(<>\r\n                <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                    <input type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} required onChange={onChange} autoFocus className=\"formInput\" />\r\n                    <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                </form>\r\n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                    Cancel\r\n                </span>\r\n            </>):(<>\r\n                <h4>{nweetObj.text}</h4>\r\n                {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                {isOwner && (\r\n                    <div className=\"nweet__actions\">\r\n                        <span onClick={onDeleteClick}>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </span>\r\n                        <span onClick={toggleEditing}>\r\n                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </span>\r\n                    </div>\r\n                )}\r\n            </>)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import React, { useRef, useState } from \"react\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { v4 } from \"uuid\";\r\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\r\nimport {\r\n    addDoc,\r\n    collection,\r\n} from \"firebase/firestore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory=({userObj})=>{\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const fileInput = useRef();\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        try {\r\n            let attachmentUrl = \"\";\r\n            if (attachment !== \"\") {\r\n                const fileRef = ref(storageService, `${userObj.uid}/${v4()}`);\r\n                const response = await uploadString(fileRef, attachment, \"data_url\");\r\n                attachmentUrl = await getDownloadURL(response.ref);\r\n            }\r\n            const nweetObj = {\r\n                text: nweet,\r\n                createdAt: Date.now(),\r\n                creatorId: userObj.uid,\r\n                attachmentUrl,\r\n            };\r\n            const docRef = await addDoc(collection(dbService, \"nweets\"), nweetObj);\r\n            console.log(\"Document written with ID:\", docRef.id);\r\n        } catch (error) {\r\n            console.error(\"Error adding document: \", error);\r\n        }\r\n        setNweet(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const { target: { files }, } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const { currentTarget: { result }, } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n\r\n    }\r\n    const onClearAttachment = () => {\r\n        setAttachment(\"\");\r\n    };\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                className=\"factoryInput__input\"\r\n                value={nweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\nexport default NweetFactory;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n    collection,\r\n    getFirestore,\r\n    onSnapshot,\r\n    orderBy,\r\n    query\r\n} from \"firebase/firestore\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(getFirestore(), \"nweets\"),\r\n            //where(conditions),\r\n            orderBy('createdAt')\r\n        );\r\n        const unsubscribe = onSnapshot(q, querySnapshot => {\r\n            const newArray = querySnapshot.docs.map(doc => {\r\n                return {\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                };\r\n            });\r\n            setNweets(newArray);\r\n            console.log('Current nweets in CA: ', newArray);\r\n        });\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation=({userObj})=>(\r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName\r\n                        ? `${userObj.displayName}'s Profile`\r\n                        : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\nexport default Navigation;","import { signOut, updateProfile } from \"@firebase/auth\";\r\nimport {\r\n    collection,\r\n    getDocs,\r\n    query,\r\n    where,\r\n} from \"@firebase/firestore\";\r\nimport { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        signOut(authService);\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const { target: { value }, } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await updateProfile(authService.currentUser, {\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    const getMyNweets = async () => {\r\n        const q = query(\r\n            collection(dbService, \"nweets\"),\r\n            where(\"creatorId\", \"==\", userObj.uid)\r\n        );\r\n        const querySnapshot = await getDocs(q);\r\n        querySnapshot.forEach((doc) => {\r\n            console.log(doc.id, \"=>\", doc.data());\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }, []);\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn?(\r\n                    <div\r\n                        style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </div>\r\n                ):(\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth/>\r\n                        </Route>\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n    });\n  };\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser} /> : \"Initializing...\"}\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport firebase from './fbase';\nimport \"./styles.css\";\nconsole.log(firebase);\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}